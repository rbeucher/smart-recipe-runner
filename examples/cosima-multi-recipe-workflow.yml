name: COSIMA Multi-Recipe Execution
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      selected_recipes:
        description: 'Comma-separated list of recipes to run (leave empty for all enabled)'
        required: false
        default: ''

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.recipes.outputs.matrix }}
      recipe_count: ${{ steps.recipes.outputs.recipe_count }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate Recipe Matrix
        id: recipes
        uses: rbeucher/smart-recipe-runner@main
        with:
          mode: 'list-recipes'
          config_file: 'examples/cosima-all-recipes.yml'
          selected_recipes: ${{ github.event.inputs.selected_recipes }}
          gadi_username: ${{ secrets.GADI_USERNAME }}
          gadi_ssh_key: ${{ secrets.GADI_SSH_KEY }}
          gadi_ssh_passphrase: ${{ secrets.GADI_SSH_PASSPHRASE }}
      
      - name: Display Matrix
        run: |
          echo "üöÄ Will execute ${{ steps.recipes.outputs.recipe_count }} recipe(s)"
          echo "Matrix: ${{ steps.recipes.outputs.matrix }}"

  execute-recipes:
    needs: setup
    if: fromJson(needs.setup.outputs.recipe_count) > 0
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    name: "Execute: ${{ matrix.recipe.name }}"
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run COSIMA Recipe on Gadi
        id: cosima
        uses: rbeucher/smart-recipe-runner@main
        with:
          recipe_type: ${{ matrix.recipe.type }}
          recipe_name: ${{ matrix.recipe.name }}
          config: ${{ matrix.recipe.config }}
          esmvaltool_version: ${{ matrix.recipe.esmvaltool_version }}
          conda_module: ${{ matrix.recipe.conda_module }}
          project: ${{ matrix.recipe.project }}
          repository_url: ${{ matrix.recipe.repository_url }}
          gadi_username: ${{ secrets.GADI_USERNAME }}
          gadi_ssh_key: ${{ secrets.GADI_SSH_KEY }}
          gadi_ssh_passphrase: ${{ secrets.GADI_SSH_PASSPHRASE }}
          scripts_dir: ${{ secrets.GADI_SCRIPTS_DIR }}
      
      - name: Monitor Job
        run: |
          echo "COSIMA recipe '${{ matrix.recipe.name }}' submitted!"
          echo "Job ID: ${{ steps.cosima.outputs.job_id }}"
          echo "Monitor with: qstat ${{ steps.cosima.outputs.job_id }}"
          echo "Recipe type: ${{ matrix.recipe.type }}"
          echo "Status: ${{ steps.cosima.outputs.status }}"

  summary:
    needs: [setup, execute-recipes]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Execution Summary
        run: |
          echo "üìä Multi-Recipe Execution Summary"
          echo "=================================="
          echo "Total recipes configured: ${{ needs.setup.outputs.recipe_count }}"
          echo "Execution result: ${{ needs.execute-recipes.result }}"
          
          if [[ "${{ needs.execute-recipes.result }}" == "success" ]]; then
            echo "‚úÖ All recipes executed successfully"
          elif [[ "${{ needs.execute-recipes.result }}" == "failure" ]]; then
            echo "‚ùå Some recipes failed - check individual job logs"
          else
            echo "‚ö†Ô∏è  Recipes were skipped or cancelled"
          fi
