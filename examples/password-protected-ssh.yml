name: 'ESMValTool with Password-Protected SSH Key'
description: 'Example workflow showing how to use password-protected SSH keys'

on:
  workflow_dispatch:
    inputs:
      recipe_name:
        description: 'Recipe name to run'
        required: true
        default: 'recipe_example'
      esmvaltool_version:
        description: 'ESMValTool version'
        required: false
        default: 'main'

jobs:
  run_recipe:
    runs-on: ubuntu-latest
    name: Run ESMValTool Recipe with Password-Protected Key
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run recipe with password-protected SSH key
      uses: ACCESS-NRI/smart-recipe-runner@v1
      with:
        # Basic recipe configuration
        recipe: ${{ inputs.recipe_name }}
        esmvaltool_version: ${{ inputs.esmvaltool_version }}
        
        # Optional: Custom configuration
        config: |
          {
            "queue": "normal",
            "memory": "4gb",
            "walltime": "02:00:00",
            "group": "medium"
          }
        
        # Mode: Use dry-run for testing, run-only for execution
        mode: dry-run
        
      env:
        # Required: HPC connection details
        GADI_USER: ${{ secrets.GADI_USER }}
        GADI_KEY: ${{ secrets.GADI_KEY }}
        GADI_KEY_PASSPHRASE: ${{ secrets.GADI_KEY_PASSPHRASE }}  # For password-protected keys
        SCRIPTS_DIR: ${{ secrets.GADI_SCRIPTS_DIR }}
        
        # Optional: GitHub token for status updates
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        # Note: When GADI_KEY_PASSPHRASE is provided, the action will:
        # 1. Start an SSH agent
        # 2. Try multiple methods to add the key (SSH_ASKPASS, sshpass, expect, pexpect)
        # 3. Use the agent for SSH connections
        # 4. Fall back to local mode if SSH agent setup fails
        # 5. Clean up the agent when finished
    
    - name: Check execution status
      if: always()
      run: |
        echo "Recipe execution completed"
        echo "Status: ${{ steps.run_recipe.outputs.status }}"
        if [ -n "${{ steps.run_recipe.outputs.job_id }}" ]; then
          echo "Job ID: ${{ steps.run_recipe.outputs.job_id }}"
        fi
