name: COSIMA Recipe Execution

on:
  workflow_dispatch:
    inputs:
      recipe:
        description: 'COSIMA recipe name to run'
        required: true
        default: 'example_analysis'
      repository_url:
        description: 'COSIMA repository URL'
        required: false
        default: 'https://github.com/COSIMA/cosima-recipes'
      custom_config:
        description: 'Custom resource configuration (JSON)'
        required: false
        default: '{"queue":"normal","memory":"16gb","walltime":"03:00:00"}'

env:
  GADI_USER: ${{ secrets.GADI_USER }}
  GADI_KEY: ${{ secrets.GADI_KEY }}
  GADI_KEY_PASSPHRASE: ${{ secrets.GADI_KEY_PASSPHRASE }}
  SCRIPTS_DIR: ${{ secrets.GADI_SCRIPTS_DIR }}

jobs:
  run-cosima-recipe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Run COSIMA Recipe
        id: run
        uses: rbeucher/smart-recipe-runner@main
        with:
          mode: recipe
          recipe_name: ${{ github.event.inputs.recipe }}
          recipe_type: cosima
          esmvaltool_repository: ${{ github.event.inputs.repository_url }}
          config: ${{ github.event.inputs.custom_config }}
      
      - name: Display Results
        run: |
          echo "ðŸŽ¯ COSIMA Recipe Execution Completed"
          echo "Recipe: ${{ github.event.inputs.recipe }}"
          echo "Repository: ${{ github.event.inputs.repository_url }}"
          echo "Status: ${{ steps.run.outputs.status }}"
          echo "Resource Group: ${{ steps.run.outputs.resource_group }}"
          if [ "${{ steps.run.outputs.job_id }}" != "" ]; then
            echo "PBS Job ID: ${{ steps.run.outputs.job_id }}"
          fi
